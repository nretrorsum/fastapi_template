[project]
name = "meal"
version = "0.1.0"
description = "FastAPI meal management application with Celery background tasks"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "celery>=5.5.3",
    "fastapi[standard]>=0.116.1",
    "redis>=6.2.0",
    "sqlalchemy>=2.0.41",
    "alembic>=1.13.0",
    "psycopg2-binary>=2.9.9",
    "python-multipart>=0.0.9",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "uvicorn[standard]>=0.30.0",
    "asyncpg>=0.30.0",
    "greenlet>=3.2.3",
    "passlib[bcrypt]>=1.7.4",
    "pre-commit>=4.2.0",
    "python-jose>=3.5.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "black>=24.0.0",
    "ruff>=0.6.0",
    "flower>=2.0.0",
    "httpx>=0.25.0",
]

[tool.uv.sources]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "src/meal/tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "src/meal/tests/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.hatch.build.targets.wheel]
packages = ["src/meal"]
